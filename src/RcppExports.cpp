// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// whmx
int whmx(NumericVector vector);
RcppExport SEXP _GeDS_whmx(SEXP vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vector(vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(whmx(vector));
    return rcpp_result_gen;
END_RCPP
}
// Knotnew
NumericVector Knotnew(NumericVector weights, NumericVector residuals, NumericVector x, NumericVector dcum, NumericVector oldknots, double tol);
RcppExport SEXP _GeDS_Knotnew(SEXP weightsSEXP, SEXP residualsSEXP, SEXP xSEXP, SEXP dcumSEXP, SEXP oldknotsSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type residuals(residualsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dcum(dcumSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type oldknots(oldknotsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(Knotnew(weights, residuals, x, dcum, oldknots, tol));
    return rcpp_result_gen;
END_RCPP
}
// makenewknots
NumericVector makenewknots(NumericVector knots, int degree);
RcppExport SEXP _GeDS_makenewknots(SEXP knotsSEXP, SEXP degreeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< int >::type degree(degreeSEXP);
    rcpp_result_gen = Rcpp::wrap(makenewknots(knots, degree));
    return rcpp_result_gen;
END_RCPP
}
// makeEpsilonsb
NumericVector makeEpsilonsb(NumericVector data, NumericVector Xs, NumericVector Ys, int degree);
RcppExport SEXP _GeDS_makeEpsilonsb(SEXP dataSEXP, SEXP XsSEXP, SEXP YsSEXP, SEXP degreeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xs(XsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Ys(YsSEXP);
    Rcpp::traits::input_parameter< int >::type degree(degreeSEXP);
    rcpp_result_gen = Rcpp::wrap(makeEpsilonsb(data, Xs, Ys, degree));
    return rcpp_result_gen;
END_RCPP
}
// makeRatSplines
NumericMatrix makeRatSplines(NumericMatrix matrice, NumericVector h);
RcppExport SEXP _GeDS_makeRatSplines(SEXP matriceSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrice(matriceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(makeRatSplines(matrice, h));
    return rcpp_result_gen;
END_RCPP
}
// makeWeights
NumericVector makeWeights(NumericMatrix x);
RcppExport SEXP _GeDS_makeWeights(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(makeWeights(x));
    return rcpp_result_gen;
END_RCPP
}
// tensorProd
NumericMatrix tensorProd(NumericMatrix Xmat, NumericMatrix Ymat);
RcppExport SEXP _GeDS_tensorProd(SEXP XmatSEXP, SEXP YmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Ymat(YmatSEXP);
    rcpp_result_gen = Rcpp::wrap(tensorProd(Xmat, Ymat));
    return rcpp_result_gen;
END_RCPP
}
// makeNewMatrCPP
NumericMatrix makeNewMatrCPP(NumericMatrix matrix, Nullable<IntegerMatrix> tab, bool by_row);
RcppExport SEXP _GeDS_makeNewMatrCPP(SEXP matrixSEXP, SEXP tabSEXP, SEXP by_rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerMatrix> >::type tab(tabSEXP);
    Rcpp::traits::input_parameter< bool >::type by_row(by_rowSEXP);
    rcpp_result_gen = Rcpp::wrap(makeNewMatrCPP(matrix, tab, by_row));
    return rcpp_result_gen;
END_RCPP
}
// findNewDimKnot
List findNewDimKnot(IntegerVector dcumFixedDim_Dim, NumericVector Dim_weights, NumericVector Dim_intknots, NumericMatrix matrFixedDim, int Dim_index);
RcppExport SEXP _GeDS_findNewDimKnot(SEXP dcumFixedDim_DimSEXP, SEXP Dim_weightsSEXP, SEXP Dim_intknotsSEXP, SEXP matrFixedDimSEXP, SEXP Dim_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type dcumFixedDim_Dim(dcumFixedDim_DimSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Dim_weights(Dim_weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Dim_intknots(Dim_intknotsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type matrFixedDim(matrFixedDimSEXP);
    Rcpp::traits::input_parameter< int >::type Dim_index(Dim_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(findNewDimKnot(dcumFixedDim_Dim, Dim_weights, Dim_intknots, matrFixedDim, Dim_index));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GeDS_whmx", (DL_FUNC) &_GeDS_whmx, 1},
    {"_GeDS_Knotnew", (DL_FUNC) &_GeDS_Knotnew, 6},
    {"_GeDS_makenewknots", (DL_FUNC) &_GeDS_makenewknots, 2},
    {"_GeDS_makeEpsilonsb", (DL_FUNC) &_GeDS_makeEpsilonsb, 4},
    {"_GeDS_makeRatSplines", (DL_FUNC) &_GeDS_makeRatSplines, 2},
    {"_GeDS_makeWeights", (DL_FUNC) &_GeDS_makeWeights, 1},
    {"_GeDS_tensorProd", (DL_FUNC) &_GeDS_tensorProd, 2},
    {"_GeDS_makeNewMatrCPP", (DL_FUNC) &_GeDS_makeNewMatrCPP, 3},
    {"_GeDS_findNewDimKnot", (DL_FUNC) &_GeDS_findNewDimKnot, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_GeDS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
